name: Push / pull CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  robot_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]
    name: Run Robot Framework Tests
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install ChromeDriver
        run: |
          CHROME_VERSION=$(google-chrome --version | cut -f 3 -d ' ' | cut -d '.' -f 1) \
            && CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}) \
            && curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip "http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip" \
            && cd /tmp \
            && unzip chromedriver_linux64.zip \
            && rm -rf chromedriver_linux64.zip \
            && sudo mv chromedriver /usr/local/bin/chromedriver \
            && sudo chmod +x /usr/local/bin/chromedriver \
            && chromedriver --version
      - name: display
        run: DISPLAY=:0
      - name: Robot Framework
        run: |
          python -m pip install --upgrade pip
          pip install robotframework
          pip install robotframework-seleniumlibrary
          pip install pandas
          pip install numpy
          pip install Pillow            
          pip install imutils
          pip install scikit-image
          pip install opencv-python
      - name: Run headless test
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: python3 -m robot tests/unit_test.robot

  # Builds documentation via robot.libdoc module into ./docs folder
  build_documentation:
    needs: [robot_test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]
    name: Build Documentation
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install RobotFramework
        run: |
          python3 -m pip install --upgrade pip
          pip install robotframework
          pip install robotframework-seleniumlibrary
          pip install pandas
          pip install numpy
          pip install Pillow            
          pip install imutils
          pip install scikit-image
          pip install opencv-python
      # https://peterevans.dev/posts/github-actions-how-to-automate-code-formatting-in-pull-requests/
      - name: Create documentation
        run: |
          python3 -m robot.libdoc -f html ./WatchUI/WatchUI.py docs/index.html
      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)
      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name 'janegermaier'
          git config --global user.email 'jan.egermaier@tesena.com'
          git remote set-url origin https://x-access-token:${{ secrets.TOKEN_DOC}}@github.com/${{ github.repository }}
          git commit -am "Documentation build"
          git push
