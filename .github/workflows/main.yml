name: Push / pull CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  robot_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]
    name: Run Robot Framework Tests
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install ChromeDriver
        run: |
          CHROME_VERSION=$(google-chrome --version | cut -f 3 -d ' ' | cut -d '.' -f 1) \
            && CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}) \
            && curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip "http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip" \
            && cd /tmp \
            && unzip chromedriver_linux64.zip \
            && rm -rf chromedriver_linux64.zip \
            && sudo mv chromedriver /usr/local/bin/chromedriver \
            && sudo chmod +x /usr/local/bin/chromedriver \
            && chromedriver --version
      - name: Install Tesseract
        run: |
          sudo apt install tesseract-ocr-ces
          tesseract --version
          tesseract --list-langs
      - name: Set display
        run: DISPLAY=:0
      - name: Robot Framework
        run: |
          python -m pip install --upgrade pip
          pip install robotframework
          pip install robotframework-seleniumlibrary
          pip install pandas
          pip install numpy
          pip install Pillow            
          pip install imutils
          pip install scikit-image
          pip install opencv-python
          pip install PyMuPDF
          pip install WatchUI
      - name: Run headless test
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: python3 -m robot --outputdir reports tests/unit_test.robot
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-result-report
          path: reports/*